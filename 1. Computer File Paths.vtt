WEBVTT

0
00:00.230 --> 00:00.800
Hey, guys.

1
00:00.800 --> 00:07.400
In this lesson, we're going to be introducing a concept that is related to computing but is also super

2
00:07.400 --> 00:11.840
important for web development, and that's this idea of file paths.

3
00:11.870 --> 00:16.760
The Absolute and Relative paths, what they are, and how they work.

4
00:17.150 --> 00:23.660
You can think of a file path as a unique location for a file or folder on your computer.

5
00:23.660 --> 00:31.370
So similarly, if you wanted to tell somebody about a unique location in the world, then I tell you

6
00:31.370 --> 00:33.860
well, go to this particular path.

7
00:34.040 --> 00:40.490
And what it would look like is I would tell you to zoom in on the UK and then go into London and then

8
00:40.490 --> 00:43.880
inside London, I want you to go into Westminster.

9
00:43.880 --> 00:49.640
And then in Westminster there's this place called Page Street and there's a really nice cafe on it.

10
00:49.640 --> 00:54.410
And through this path I've directed you to a unique location.

11
00:54.410 --> 01:02.490
Similarly, we can use a file path on a computer to direct the computer to look inside a specific location

12
01:02.490 --> 01:04.050
in the hard drive.

13
01:04.260 --> 01:09.510
If you're a normal computer user, you often don't even need to think about file paths because it's

14
01:09.510 --> 01:11.010
all done graphically.

15
01:11.010 --> 01:16.860
If you want to navigate to a particular file, then you could just go into your Project folder, go

16
01:16.860 --> 01:22.080
into your Images folder and you find your cat image and then you can open it up.

17
01:22.230 --> 01:29.580
But similarly, we could use this concept of paths to go to exactly the same location and navigate to

18
01:29.580 --> 01:30.750
the same files.

19
01:31.860 --> 01:36.630
A file path can direct someone to a file or a folder.

20
01:36.810 --> 01:42.990
As you can see here, we've got a very simple structure of the storage on a computer.

21
01:43.020 --> 01:51.450
The Root is usually the starting point of your computer filing system, and this is usually called

22
01:51.450 --> 01:52.640
your Hard Drive.

23
01:52.650 --> 02:00.600
So this could be your C: drive on a Windows or it could be your Macintosh HD, which is on a Mac.

24
02:00.600 --> 02:07.320
If this is the organizational structure of your files, then you'd have a very clean computer,

25
02:07.320 --> 02:11.070
but also it'd be very simple for us to run through the example.

26
02:11.070 --> 02:19.140
I could direct the computer to this particular file, or I could direct them towards this particular

27
02:19.140 --> 02:23.820
folder, and I would do both of those things using a file path.

28
02:23.910 --> 02:29.460
We've seen what a file path looks like and we can see what the destination can be,

29
02:29.490 --> 02:34.320
but if you remember at the beginning of the lesson, I told you there are two types of file paths.

30
02:34.350 --> 02:37.910
There are absolute file paths and relative file paths.

31
02:37.920 --> 02:39.810
So what's the difference?

32
02:39.900 --> 02:44.160
Well, an Absolute File Path is probably the simplest to understand,

33
02:44.190 --> 02:49.680
it's a file path that is relative to the root of the computer.

34
02:49.680 --> 02:54.030
Remember, that is the C: drive or it is the Macintosh HD.

35
02:54.630 --> 02:59.940
And then we can use the file path to direct to a specific location,

36
02:59.940 --> 03:05.310
in this case, this cat.png , using the absolute file path.

37
03:05.310 --> 03:13.560
And this is what it would look like on Windows, and this is what our file path would look like on a Mac.

38
03:13.590 --> 03:21.300
In both of these cases, we're traversing a journey effectively and we're taking people from the very

39
03:21.300 --> 03:28.260
beginning, which is the root of the hard drive, and we're navigating them firstly into the Project

40
03:28.260 --> 03:31.890
folder and then into the Images folder,

41
03:31.890 --> 03:36.600
and then finally we reach our final destination, which is the cat.png.

42
03:36.930 --> 03:41.760
And that's effectively all that these two things describe, right?

43
03:41.760 --> 03:48.390
They are simply a path in order to get to our desired final destination.

44
03:48.600 --> 03:55.860
An absolute file path is really useful when you're navigating on a computer because no matter where

45
03:55.860 --> 04:01.200
you are currently within the file structure. You could be currently in the Project folder, you could

46
04:01.200 --> 04:05.250
be in the index.html, you can be at any part of the computer,

47
04:05.250 --> 04:12.840
you can always tell them this absolute file path and the computer would know how to go from the very

48
04:12.840 --> 04:16.830
beginning into that destination that you specified.

49
04:17.070 --> 04:24.600
Now, however, for web development, a more useful type of file path is a Relative File Path. As the

50
04:24.600 --> 04:27.000
name suggests, it's relative to something,

51
04:27.000 --> 04:27.270
right?

52
04:27.270 --> 04:32.520
So what is it relative to? In this case, we are not in the root folder,

53
04:32.520 --> 04:39.630
we're writing our code, for example, inside the index.html, and we want to pull up an image on our

54
04:39.630 --> 04:40.440
website.

55
04:40.440 --> 04:42.870
So we have to specify the path,

56
04:42.870 --> 04:50.040
but in this case, we can specify it relative to the location where we are writing our code,

57
04:50.040 --> 04:56.910
this particular file. If you think of your starting point as this file, then relative to it, how

58
04:56.910 --> 04:58.710
do we get to this cat.png?

59
04:59.070 --> 04:59.820
Well, we

60
04:59.890 --> 05:07.150
can first go into the Images folder and then inside the Images folder we direct to the cat.png .

61
05:07.450 --> 05:11.470
So usually relative file paths are a little bit shorter,

62
05:11.470 --> 05:19.630
and also more importantly, it doesn't matter if you move your folders around, it's always going to

63
05:19.630 --> 05:20.560
be valid.

64
05:20.590 --> 05:28.720
For example, if this project folder got moved into a different folder or if it became nested inside

65
05:28.720 --> 05:36.850
another folder, then this particular relative file path, this short journey is still always going

66
05:36.850 --> 05:38.020
to be valid.

67
05:38.410 --> 05:45.010
In web development, when we're referring to a particular resource, say we want to bring up an image,

68
05:45.010 --> 05:51.190
or sound, or a movie, or another HTML file for that matter,

69
05:51.190 --> 05:54.880
we usually will use a relative file path.

70
05:55.540 --> 06:02.270
Now, one of the things that's really helpful for us in writing relative file paths is there are these

71
06:02.270 --> 06:07.760
special characters that can make it easier for us to navigate the file structure.

72
06:08.090 --> 06:15.980
One such character is the two double dots (..), and when we write two double dots (..) at the beginning of our

73
06:15.980 --> 06:20.990
relative file path, what it means is to go up a level.

74
06:21.020 --> 06:22.880
Basically, that's all it means.

75
06:23.120 --> 06:30.170
It just means go up a level and then go into whichever resource or whichever path you want to navigate.

76
06:30.260 --> 06:38.570
In this case, we are starting off in our index.html and this file is located inside the Project folder.

77
06:38.570 --> 06:41.520
So this is where our starting point is.

78
06:41.540 --> 06:50.720
If we go up a level using those two double dots (..), then what that enables us to do is to go into the

79
06:50.720 --> 06:51.980
Root folder.

80
06:52.040 --> 06:59.780
Now, relative to this Root folder, in order to navigate to the essay.docx, all we have to write is

81
06:59.900 --> 07:05.960
essay.docx and this enables us to travel up through the folder tree.

82
07:06.380 --> 07:14.270
Another special character is the single dot(.), and what this single dot(.) does is it tells us to stay within

83
07:14.270 --> 07:18.010
the current directory and look over there.

84
07:18.020 --> 07:20.480
So where is the current directory?

85
07:20.480 --> 07:27.890
Well, relative to our starting point here, the current directory is of course our Project folder right

86
07:27.890 --> 07:28.520
here.

87
07:28.820 --> 07:31.360
Relative to this Project folder,

88
07:31.370 --> 07:43.100
we can navigate using that dot slash (./)to start right here and then we can go into the dog.png simply

89
07:43.100 --> 07:46.700
by using this more direct file path.

90
07:46.730 --> 07:53.000
Now one thing you might see out there in the wild is in order to access something within the current

91
07:53.000 --> 07:59.450
directory, current directory means the folder that your file is directly located in.

92
07:59.450 --> 08:02.420
So in this case, again, it's the Project folder.

93
08:02.660 --> 08:09.350
But whenever you want to access anything in the current directory, so anything along the same hierarchy

94
08:09.350 --> 08:09.620
here.

95
08:09.620 --> 08:15.980
So this one, or this one, or this one, you can also omit the dot slash (./).

96
08:15.980 --> 08:23.240
So you can actually just simply write dog.png and it will look within the current Project folder

97
08:23.240 --> 08:24.860
in order to find that.

98
08:24.860 --> 08:29.570
But sometimes using this direct method doesn't actually work.

99
08:29.570 --> 08:35.420
So I recommend whenever you're trying to access something within the current directory to go ahead and

100
08:35.420 --> 08:37.670
use this dot slash (./) notation.

101
08:37.670 --> 08:40.940
This way it's going to work 100% of the time.

102
08:41.570 --> 08:48.350
So now it's time to try and exercise and see if you've understood some of the important concepts that

103
08:48.350 --> 08:51.050
we covered in terms of file paths.

104
08:51.080 --> 08:57.590
Once you've downloaded and extracted the folder that we've set up for you, you should have it open

105
08:57.590 --> 09:02.210
in VS Code inside your Web Development Projects folder.

106
09:02.210 --> 09:07.520
And here, if you expand the Project folder, you will see many folders.

107
09:07.550 --> 09:12.680
There's Folder0, Folder1, Folder2, and Folder3.

108
09:12.710 --> 09:20.210
Now,  if you go inside the index.html, you can see there is a very simple setup here where we've got

109
09:20.210 --> 09:24.560
a website that's going to display an image of all the animals.

110
09:24.710 --> 09:29.330
So that includes the rabbit, the cat, the dog, the fish and the bird.

111
09:29.360 --> 09:39.230
Now, you'll notice that these image files exist within this unnecessarily complex folder structure.

112
09:39.230 --> 09:44.540
And the reason why it's unnecessarily complex is because I really want to make sure that you understand

113
09:44.540 --> 09:46.520
how file paths work.

114
09:46.760 --> 09:51.380
So I want you to look very, very carefully at how it's structured.

115
09:51.860 --> 09:59.750
And your goal is to write the image tags underneath the h2's so that

116
09:59.770 --> 10:03.250
we actually display the correct animals under each heading.

117
10:03.340 --> 10:10.180
If you take a look at the goal image, you'll see that the final project should look something like

118
10:10.180 --> 10:10.780
this.

119
10:10.810 --> 10:16.660
You've got all the animals and then under each h2 heading, you've got the rabbit, the cat, the dog,

120
10:16.660 --> 10:19.270
the fish and the bird being displayed.

121
10:19.270 --> 10:23.080
And these images come from these locations.

122
10:23.710 --> 10:32.890
I want you to use relative file paths in order to pull up the images as the source for your image elements.

123
10:32.920 --> 10:39.040
You already know how to create image elements from a previous lesson, so all you need to do is use

124
10:39.040 --> 10:43.900
what you've learned about file paths in this lesson to complete this challenge.

125
10:44.140 --> 10:50.320
And while you're working on it, remember to use the Preview to see if your code is actually working.

126
10:50.320 --> 10:59.740
And if it doesn't display and it has this broken sort of look like this, then it means your file path

127
10:59.840 --> 11:04.010
is not correct and you should rethink what you've put in there.

128
11:04.280 --> 11:08.540
Pause the video now and give this challenge a go.

129
11:08.570 --> 11:13.220
Once you're done, come back and we'll go through the solution all together.

130
11:13.220 --> 11:19.100
But I want you to really give it a good go before you come back and try if you can solve your own problems,

131
11:19.100 --> 11:21.050
because they will inevitably come up.

132
11:21.080 --> 11:25.490
File paths are a very complex topic, so give it enough time.

133
11:25.490 --> 11:29.690
Really try to get the images showing that is your challenge.

134
11:29.690 --> 11:30.830
Pause the video now.

135
11:36.230 --> 11:39.380
All right, so let's start off with Rabbit.

136
11:39.380 --> 11:45.650
And I don't know if you've noticed, but I've got them in order of pretty much difficulty.

137
11:45.740 --> 11:52.450
The first one, the rabbit should be the easiest to pull up because it's right inside the same directory.

138
11:52.460 --> 11:53.150
Right?

139
11:53.300 --> 12:00.710
In fact, we can just use the ./ and we'll get to our rabbit.png because remember what I said

140
12:00.710 --> 12:04.360
about the special character single dot forward slash (./),

141
12:04.370 --> 12:10.880
it allows us to access anything that's within the same directory as where we are.

142
12:11.120 --> 12:18.160
Now here we can see that our index.html is located inside a Folder0.

143
12:18.170 --> 12:21.380
So this is the parent folder for this file.

144
12:21.500 --> 12:27.600
Now the reason we know that is because when we collapse this folder, we can no longer see that file.

145
12:27.620 --> 12:34.160
Whereas if we collapse this folder three, for example, we can still see index.html but we can't see

146
12:34.190 --> 12:35.670
cat.png anymore.

147
12:35.670 --> 12:43.920
So it means this folder contains this file and when we close it then we no longer see it. In order to

148
12:43.920 --> 12:51.990
navigate up from the index.html, which is where we are currently located because that's where we are

149
12:51.990 --> 12:53.310
writing our code,

150
12:53.340 --> 13:02.820
then we can use that ./ in order to navigate into the parent folder, which is Folder0 and

151
13:02.820 --> 13:04.830
then inside Folder0,

152
13:04.860 --> 13:11.760
then we can go into one of the contents in this folder, which is our rabbit.png.

153
13:12.780 --> 13:20.010
Now remember, with image elements, it's always good practice to add an alt text so that people who

154
13:20.010 --> 13:24.150
can't see the website know what this image is all about.

155
13:24.150 --> 13:25.770
So that's pretty simple.

156
13:25.920 --> 13:27.810
Now let's move on to the next one.

157
13:27.810 --> 13:30.450
Let's do the cat.

158
13:31.320 --> 13:35.610
Where is the cat relative to our current location?

159
13:35.610 --> 13:39.000
We are currently inside index.html.

160
13:39.030 --> 13:42.030
That's where we are writing our code, right here,

161
13:42.030 --> 13:50.340
as you can see. In order to get hold of our cat.png, if we're starting from the index.html, then

162
13:50.340 --> 13:57.780
we can navigate up to our current parent folder using ./,

163
13:57.780 --> 14:05.370
and then once we're there we can navigate into this Folder3, by simply adding Folder3 after

164
14:05.370 --> 14:11.130
the slash, then after that we can go into the cat.png.

165
14:11.670 --> 14:17.430
So this is what our entire path would look like. Here

166
14:17.430 --> 14:24.600
let's go ahead and do ./ and then you can see automatically VS Code is already recommending to

167
14:24.600 --> 14:27.150
you which options you have.

168
14:27.180 --> 14:33.090
We want to go into Folder3 and then inside Folder3, there's only one item, so we can only

169
14:33.090 --> 14:35.730
suggest one thing and it's cat.png.

170
14:36.240 --> 14:42.930
One of my recommendations for working with File Paths is when you're not getting the right recommendations

171
14:42.930 --> 14:44.370
when you start typing,

172
14:44.370 --> 14:50.730
for example, if I accidentally typed two dots (..) instead of one (.), then I'm getting dog, Folder0, Folder1 and

173
14:50.730 --> 14:52.530
I'm not getting Folder3 at all,

174
14:52.530 --> 14:55.380
I should already have alarm bells ringing in my mind.

175
14:55.410 --> 14:56.940
Something's not right here.

176
14:56.940 --> 14:59.310
It's not quite doing the right thing.

177
14:59.310 --> 15:05.070
So then I have to check my code and make sure that I'm actually using the correct special characters,

178
15:05.070 --> 15:07.800
which in this case is, of course, the ./.

179
15:08.700 --> 15:15.540
And I recommend actually using the VS Code Autosuggest because then you're making less typing errors

180
15:15.540 --> 15:22.080
because even if you type it slightly wrong, let's say I add an extra T in here by accident, then our

181
15:22.080 --> 15:25.830
file path is going to break and we're not going to see our image at all.

182
15:25.950 --> 15:30.810
That's why I recommend using the dropdown selection. In order to complete this,

183
15:30.810 --> 15:38.250
finally, let's add an alt text and then close off our self-closing image tag.

184
15:38.700 --> 15:40.110
So now we've got Rabbit,

185
15:40.110 --> 15:43.290
Cat, all we have left is Dog, Fish and Bird.

186
15:43.290 --> 15:47.550
So let's go ahead and add the source (src) for dog.

187
15:47.550 --> 15:52.410
If you're looking at this and you're confused, where exactly is dog located?

188
15:52.410 --> 15:59.220
Then you can use that method I showed you previously by collapsing some of the folders in order to see

189
15:59.220 --> 15:59.340
it.

190
15:59.340 --> 16:03.570
So if we collapse all the folders, you can see that it's still visible.

191
16:03.570 --> 16:08.520
So it must be under the very, very parent folder, 4.0 File Paths.

192
16:08.520 --> 16:11.100
And this indeed is where it's located.

193
16:11.100 --> 16:19.230
So now we have to map a path from the file where we're writing our code, which is our index.html,

194
16:19.230 --> 16:22.470
and we have to go all the way to the dog.

195
16:22.590 --> 16:30.510
If we start here, we go up one level into the parent folder and then we go up one more level into 4.0

196
16:30.510 --> 16:31.320
File Path.

197
16:31.350 --> 16:34.530
Then from here we can navigate to our

198
16:34.890 --> 16:35.330
dog.png.

199
16:35.780 --> 16:39.890
Let's translate that file path into actual text.

200
16:40.010 --> 16:49.490
First, we use the ../ to go up a level and this means that we get into the File Paths.

201
16:49.610 --> 16:54.590
Remember, the ./ gets us into our parent directory,

202
16:54.590 --> 17:02.510
so in this case it will be Folder0 and the ../ takes us up a level, so we can actually

203
17:02.510 --> 17:05.210
get into this 4.0 File Paths.

204
17:05.780 --> 17:12.440
If you take a look here, you can see it now shows our dog.png as an option, and if we hit Enter,

205
17:12.440 --> 17:14.690
you can see our dog show up.

206
17:15.860 --> 17:21.470
Let's add our alt text and then let's go to the next one, which is our fish.

207
17:21.500 --> 17:26.330
And our fish is located inside Folder1

208
17:26.330 --> 17:35.700
as you can see right here. We can follow a similar path to how we got to dog, by using the ../

209
17:36.210 --> 17:40.290
to go into the 4.0 File Paths parent directory.

210
17:40.290 --> 17:49.860
From here we can go into Folder1 and inside Folder1 is fish.png and let's add our alt text,

211
17:50.250 --> 17:52.080
which is "fish".

212
17:52.080 --> 17:55.650
And finally, let's do our bird.

213
17:56.700 --> 18:00.030
Bird is just one level further from fish.

214
18:00.030 --> 18:08.790
So we can actually in fact copy much of the file path of fish and then simply extend it.

215
18:08.790 --> 18:14.730
So it's inside Folder1 and inside Folder1, there's a Folder2 and inside Folder2, there's

216
18:14.730 --> 18:16.380
our bird.png.

217
18:18.890 --> 18:20.240
And there you have it.

218
18:20.240 --> 18:25.690
That's all the code we need in order to show up all of our animals.

219
18:25.700 --> 18:33.380
And as I mentioned in web development, in most of the cases, you will be using these relative paths

220
18:33.380 --> 18:36.250
and not the absolute file paths.

221
18:36.260 --> 18:42.620
And when you're navigating around the folders, these special characters, the ./ and the

222
18:42.620 --> 18:48.710
../ is very important in order to navigate to the correct location.

223
18:48.710 --> 18:54.260
And it's important that you understand from this exercise what is the difference between the ./

224
18:54.260 --> 18:55.550
and the ../.

225
18:55.550 --> 19:00.410
And hopefully, if you managed to get all the images to show up, then you know exactly what you're doing

226
19:00.410 --> 19:04.700
and you've learned the important parts of this lesson.

227
19:05.150 --> 19:11.450
Now, in the next lesson, I'm going to show you how to use these file paths in order to get hold of

228
19:11.450 --> 19:17.420
different HTML files, and we can start building out a multi-page website.

229
19:17.420 --> 19:20.370
So for all of that and more, I'll see you there.